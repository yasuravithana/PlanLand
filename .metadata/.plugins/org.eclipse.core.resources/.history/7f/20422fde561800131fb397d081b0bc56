package com.gbpdma;

import com.gbpdma.R;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.location.LocationProvider;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.WindowManager;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class CreateMap extends Activity{

	/* this class implements LocationListener, which listens for both
	 * changes in the location of the device and changes in the status
	 * of the GPS system.
	 * */
	
	static final String tag = "Main"; // for Log
	
	GPS gps;
	
	TextView txtInfo;
	EditText mapNameBox, landmarkNameBox;
	StringBuilder sb;
	Map map;
	Polygon currentPolygon;
	int noOfFixes = 0;

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.enter_map_name);
		
		
		
		mapNameBox = (EditText) findViewById(R.id.editText1);
		
		/* the location manager is the most vital part it allows access 
		 * to location and GPS status services */
		gps = new GPS((LocationManager)getSystemService(LOCATION_SERVICE),this);
	}
	
	@Override
	protected void onResume() {
		/*
		 * onResume is is always called after onStart, even if the app hasn't been
		 * paused
		 * 
		 * add location listener and request updates every 1000ms or 1m
		 */
		gps.resume();
		super.onResume();
	}
	
	@Override
	protected void onPause() {
		/* GPS, as it turns out, consumes battery like crazy */
		gps.pause();
		super.onPause();
	}

//	@Override
//	public void onLocationChanged(Location location) {
//		//Log.v(tag, "Location Changed");
//
//		sb = new StringBuilder(512);
//		
//		noOfFixes++;
//
//		/* display some of the data in the TextView */
//
//		sb.append("No. of Fixes: ");
//		sb.append(noOfFixes);
//		sb.append('\n');
//		sb.append('\n');
//
//		sb.append("Londitude: ");
//		sb.append(location.getLongitude());
//		sb.append('\n');
//
//		sb.append("Latitude: ");
//		sb.append(location.getLatitude());
//		sb.append('\n');
//
//		sb.append("Altitiude: ");
//		sb.append(location.getAltitude());
//		sb.append('\n');
//
//		sb.append("Accuracy: ");
//		sb.append(location.getAccuracy());
//		sb.append('\n');
//
//		sb.append("Timestamp: ");
//		sb.append(location.getTime());
//		sb.append('\n');
//
//		txtInfo.setText(sb.toString());
//	}

	
	@Override
	protected void onStop() {
		/* may as well just finish since saving the state is not important for this toy app */
		//finish();
		super.onStop();
	}
	
	public void nextAfterMapNameClicked(View view) {
		
		map = new Map(mapNameBox.getText().toString());
		setContentView(R.layout.add_boundary_points);/* get TextView to display the GPS data */
		txtInfo = (TextView) findViewById(R.id.textInfo);
	}
	
	public void addBoundryPointClicked(View view) {
		//new FileHandler(this).readFile();
	}
	
	public void addLandmarksClicked(View view) {
		setContentView(R.layout.enter_landmark_name);
		landmarkNameBox = (EditText) findViewById(R.id.editTextLandmarkName);
	}
	
	public void nextAfterLandmarkNameClicked(View view) {
		setContentView(R.layout.add_landmark_points);
	}
	
	public void addLandmarkPointClicked(View view) {
		//new FileHandler(this).readFile();
	}
	
	public void newLandmarkClicked(View view) {
		setContentView(R.layout.enter_landmark_name);
	}
	public void finishMapClicked(View view) {
		
	}
}
